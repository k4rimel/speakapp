-- MySQL Script generated by MySQL Workbench
-- 04/02/15 11:37:45
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema speakapp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema speakapp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `speakapp` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `speakapp` ;

-- -----------------------------------------------------
-- Table `speakapp`.`location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`location` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`location` (
  `idLocation` INT NOT NULL AUTO_INCREMENT,
  `city` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `street` VARCHAR(45) NULL,
  `zipcode` INT NULL,
  PRIMARY KEY (`idLocation`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`gender`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`gender` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`gender` (
  `idGender` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`idGender`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`profile` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`profile` (
  `idProfile` INT NOT NULL AUTO_INCREMENT,
  `brithday` DATETIME NULL,
  `fristname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `interests` TEXT NULL,
  `description` LONGTEXT NULL,
  `hometownLocation` INT NULL,
  `currentLocation` INT NULL,
  `pictureURL` VARCHAR(255) NULL,
  `pictureSmallURL` VARCHAR(255) NULL,
  `pictureBigURL` VARCHAR(255) NULL,
  `profileGender` INT NULL,
  PRIMARY KEY (`idProfile`),
  INDEX `hometownLocation_idx` (`hometownLocation` ASC),
  INDEX `currentLocation_idx` (`currentLocation` ASC),
  INDEX `profile_gender_fk_idx` (`profileGender` ASC),
  CONSTRAINT `hometownLocation_fk`
    FOREIGN KEY (`hometownLocation`)
    REFERENCES `speakapp`.`location` (`idLocation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `currentLocation_fk`
    FOREIGN KEY (`currentLocation`)
    REFERENCES `speakapp`.`location` (`idLocation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `profile_gender_fk`
    FOREIGN KEY (`profileGender`)
    REFERENCES `speakapp`.`gender` (`idGender`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`language` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`language` (
  `idLanguage` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`idLanguage`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`profile_language_spoken`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`profile_language_spoken` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`profile_language_spoken` (
  `profileId` INT NOT NULL,
  `languageId` INT NOT NULL,
  PRIMARY KEY (`profileId`, `languageId`),
  INDEX `id_language_fk_idx` (`languageId` ASC),
  CONSTRAINT `id_profile_language_spoken_fk`
    FOREIGN KEY (`profileId`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_language_language_spoken_fk`
    FOREIGN KEY (`languageId`)
    REFERENCES `speakapp`.`language` (`idLanguage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`discussion_method`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`discussion_method` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`discussion_method` (
  `idDiscussionMethod` INT NOT NULL AUTO_INCREMENT,
  `methodName` VARCHAR(45) NULL,
  PRIMARY KEY (`idDiscussionMethod`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`discussion_method_profile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`discussion_method_profile` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`discussion_method_profile` (
  `discussionMethodId` INT NOT NULL,
  `profileId` INT NOT NULL,
  PRIMARY KEY (`discussionMethodId`, `profileId`),
  INDEX `id_profile_fk_idx` (`profileId` ASC),
  CONSTRAINT `id_profile_discussion_method_fk`
    FOREIGN KEY (`profileId`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_discussion_method_fk`
    FOREIGN KEY (`discussionMethodId`)
    REFERENCES `speakapp`.`discussion_method` (`idDiscussionMethod`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`status` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`status` (
  `code` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`relationship`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`relationship` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`relationship` (
  `profileOneId` INT NOT NULL,
  `profileTwoId` INT NOT NULL,
  `status` INT NOT NULL,
  `actionUserId` INT NOT NULL,
  PRIMARY KEY (`profileOneId`, `profileTwoId`),
  INDEX `profile_two_id_fk_idx` (`profileTwoId` ASC),
  INDEX `action_user_id_fk_idx` (`actionUserId` ASC),
  INDEX `status_id_fk_idx` (`status` ASC),
  CONSTRAINT `profile_one_id_fk`
    FOREIGN KEY (`profileOneId`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `profile_two_id_fk`
    FOREIGN KEY (`profileTwoId`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `action_user_id_fk`
    FOREIGN KEY (`actionUserId`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status_id_fk`
    FOREIGN KEY (`status`)
    REFERENCES `speakapp`.`status` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`profile_language_to_learn`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`profile_language_to_learn` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`profile_language_to_learn` (
  `id_profile` INT NOT NULL,
  `id_language` INT NOT NULL,
  PRIMARY KEY (`id_profile`, `id_language`),
  INDEX `id_language_fk_idx` (`id_language` ASC),
  CONSTRAINT `id_profile_language_to_learn_fk`
    FOREIGN KEY (`id_profile`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_language_language_to_learn_fk`
    FOREIGN KEY (`id_language`)
    REFERENCES `speakapp`.`language` (`idLanguage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `speakapp`.`chat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `speakapp`.`chat` ;

CREATE TABLE IF NOT EXISTS `speakapp`.`chat` (
  `idchat` INT NOT NULL AUTO_INCREMENT,
  `profileId` INT NOT NULL,
  `message` TEXT NOT NULL,
  `sentOn` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idchat`),
  INDEX `id_profile_fk_idx` (`profileId` ASC),
  CONSTRAINT `id_profile_chat_fk`
    FOREIGN KEY (`profileId`)
    REFERENCES `speakapp`.`profile` (`idProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
